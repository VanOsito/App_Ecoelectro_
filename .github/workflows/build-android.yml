name: Build MAUI Android (APK) — f_gaby

on:
  push:
    branches: [ f_gaby ]
    paths:
      - 'App.sln'                           # dispara si cambia la solución
      - 'App/**'                             # dispara si cambia cualquier archivo del proyecto
      - '.github/workflows/build-android.yml'
  workflow_dispatch:

env:
  SOLUTION: App.sln
  PROJECT: App/App.csproj                   # <- si tu .csproj se llama distinto, cámbialo aquí
  TF: net9.0-android                        # <- cambia a net8.0-android si tu proyecto usa .NET 8

jobs:
  build-android:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'           # cambia a 8.0.x si usas net8

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.sln', '**/*.csproj', '**/nuget.config') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Instalar workload MAUI (Android)
        run: dotnet workload install maui-android

      - name: Instalar Android SDK (cmdline-tools + plataformas)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $env:ANDROID_HOME = "$env:USERPROFILE\android-sdk"
          $toolsRoot = Join-Path $env:ANDROID_HOME 'cmdline-tools'
          $latestDir = Join-Path $toolsRoot 'latest'
          $tmp = Join-Path $env:RUNNER_TEMP 'android-cmd-tools'
          New-Item -ItemType Directory -Force -Path $latestDir | Out-Null
          New-Item -ItemType Directory -Force -Path $tmp | Out-Null

          # Descargar y descomprimir a carpeta temporal
          $zip = Join-Path $tmp 'cmd.zip'
          Invoke-WebRequest -Uri https://dl.google.com/android/repository/commandlinetools-win-11076708_latest.zip -OutFile $zip
          Expand-Archive $zip -DestinationPath $tmp -Force
          Remove-Item $zip

          # Mover la carpeta 'cmdline-tools' dentro de 'latest' (estructura esperada)
          if (Test-Path (Join-Path $tmp 'cmdline-tools')) {
            Copy-Item -Recurse -Force (Join-Path $tmp 'cmdline-tools') $latestDir
          } elseif (Test-Path (Join-Path $tmp 'tools')) {
            # Por si Google cambia el nombre (fallback)
            Copy-Item -Recurse -Force (Join-Path $tmp 'tools') $latestDir
          }

          # Ruta correcta del sdkmanager (nota: hay una carpeta 'cmdline-tools' adicional)
          $SdkMgr = Join-Path $latestDir 'cmdline-tools\bin\sdkmanager.bat'
          if (-not (Test-Path $SdkMgr)) {
            throw "No se encontró sdkmanager en: $SdkMgr"
          }

          # Aceptar licencias (inyectamos muchas 'y')
          $accept = ("y`r`n" * 200)
          $accept | & $SdkMgr --licenses | Write-Output

          # Instalar componentes necesarios (ajusta versiones si tu proyecto usa otro compileSdk)
          & $SdkMgr "platform-tools" "platforms;android-35" "build-tools;35.0.0"


      - name: Restore (solution)
        run: dotnet restore "${{ env.SOLUTION }}"

      - name: Publicar APK
        run: dotnet publish "${{ env.PROJECT }}" -c Release -f ${{ env.TF }} -p:AndroidPackageFormat=apk -o out

      - name: Subir artefacto
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-f_gaby
          path: out
